{"@timestamp":"2021-06-06T23:49:42.686+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c7a4b783] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:48.812+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:50.874+04:00","@version":"1","message":"Located environment: name=eureka-service-registry, profiles=[default], label=null, version=fae29aad2ef18a1315bf498673d363dcab3baeb6, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:50.875+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/eureka-service-registry.yml'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:55.563+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.EurekaServerApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:56.664+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:49:57.343+04:00","@version":"1","message":"BeanFactory id=d0e5a5d3-67c8-3f37-a10d-c22f5e8f0ead","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:57.714+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c7a4b783] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:58.684+04:00","@version":"1","message":"Tomcat initialized with port(s): 8282 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:58.729+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:58.729+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:58.935+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:58.935+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3354 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:59.189+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:49:59.190+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:49:59.231+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@12f279b5","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:02.678+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:03.281+04:00","@version":"1","message":"Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'","logger_name":"com.sun.jersey.server.impl.application.WebApplicationImpl","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:03.409+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:03.412+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:03.645+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:03.686+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:04.302+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:50:04.303+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:04.915+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:07.343+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:07.612+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:07.667+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:07.667+04:00","@version":"1","message":"Client configured to neither register nor query for data.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:07.721+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009007700 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:07.831+04:00","@version":"1","message":"Initializing ...","logger_name":"com.netflix.eureka.DefaultEurekaServerContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:07.899+04:00","@version":"1","message":"Adding new peer nodes [http://eureka:8282/eureka/]","logger_name":"com.netflix.eureka.cluster.PeerEurekaNodes","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.419+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.420+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.420+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.420+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.613+04:00","@version":"1","message":"Replica node URL:  http://eureka:8282/eureka/","logger_name":"com.netflix.eureka.cluster.PeerEurekaNodes","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.632+04:00","@version":"1","message":"Finished initializing remote region registries. All known remote regions: []","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.634+04:00","@version":"1","message":"Initialized","logger_name":"com.netflix.eureka.DefaultEurekaServerContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.804+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.976+04:00","@version":"1","message":"Registering application EUREKA-SERVICE-REGISTRY with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.982+04:00","@version":"1","message":"Setting the eureka configuration..","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.984+04:00","@version":"1","message":"Eureka data center value eureka.datacenter is not set, defaulting to default","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:08.985+04:00","@version":"1","message":"Eureka environment value eureka.environment is not set, defaulting to test","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:09.010+04:00","@version":"1","message":"isAws returned false","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:09.012+04:00","@version":"1","message":"Initialized server context","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:09.012+04:00","@version":"1","message":"Got 1 instances from neighboring DS node","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:09.013+04:00","@version":"1","message":"Renew threshold is: 1","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:09.013+04:00","@version":"1","message":"Changing status to UP","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:09.025+04:00","@version":"1","message":"Started Eureka Server","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:11.122+04:00","@version":"1","message":"Tomcat started on port(s): 8282 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:11.167+04:00","@version":"1","message":"Updating port to 8282","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:11.169+04:00","@version":"1","message":"Started EurekaServerApplication in 39.488 seconds (JVM running for 41.186)","logger_name":"com.epam.hw.netflix.EurekaServerApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:39.053+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79441959] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:45.147+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:47.073+04:00","@version":"1","message":"Located environment: name=sample-api-gateway, profiles=[default], label=null, version=fae29aad2ef18a1315bf498673d363dcab3baeb6, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:47.074+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:51.737+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:52.746+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:50:52.852+04:00","@version":"1","message":"Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:50:53.406+04:00","@version":"1","message":"BeanFactory id=aacc3ccd-8219-3181-9f6c-6242f4fe7dc0","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:53.762+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$79441959] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:54.612+04:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:54.667+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:54.668+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:54.922+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:54.934+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3180 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:55.197+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:50:55.197+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:55.233+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@800d065","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:57.534+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:50:59.166+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:00.061+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:51:00.062+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:00.584+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.176+04:00","@version":"1","message":"Starting filter initializer","logger_name":"org.springframework.cloud.netflix.zuul.ZuulFilterInitializer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.386+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.612+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.674+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.754+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.754+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.931+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:02.931+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.163+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.501+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.502+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.502+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.502+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.502+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.503+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:03.503+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:05.855+04:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka:8282/eureka/}","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:302)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$80ad1278.CGLIB$eurekaClient$2(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$80ad1278$$FastClassBySpringCGLIB$$da28929f.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$80ad1278.eurekaClient(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:356)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:171)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:160)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$585c9219.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:82)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:893)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:316)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)\r\n\tat com.epam.hw.netflix.ApiGatewayApplication.main(ApiGatewayApplication.java:14)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 78 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:51:05.858+04:00","@version":"1","message":"Request execution failed with message: java.net.UnknownHostException: eureka","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:51:05.859+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway - was unable to refresh its cache! status = Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)\r\n\tat com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)\r\n\tat com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)\r\n\tat com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)\r\n\tat org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:302)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$80ad1278.CGLIB$eurekaClient$2(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$80ad1278$$FastClassBySpringCGLIB$$da28929f.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)\r\n\tat org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$80ad1278.eurekaClient(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:356)\r\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)\r\n\tat org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n\tat org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:171)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:160)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$EnhancerBySpringCGLIB$$585c9219.getEurekaClient(<generated>)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:57)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:39)\r\n\tat org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:82)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:182)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:53)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:360)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:158)\r\n\tat org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:122)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:893)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:316)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)\r\n\tat com.epam.hw.netflix.ApiGatewayApplication.main(ApiGatewayApplication.java:14)\r\n"}
{"@timestamp":"2021-06-06T23:51:05.869+04:00","@version":"1","message":"Using default backup registry implementation which does not do anything.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:51:05.875+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:05.882+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:05.895+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009065889 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:05.910+04:00","@version":"1","message":"Registering application SAMPLE-API-GATEWAY with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:05.912+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623009065912, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:05.916+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:05.925+04:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka:8282/eureka/}","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)\r\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1281)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 30 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:51:05.927+04:00","@version":"1","message":"Request execution failed with message: java.net.UnknownHostException: eureka","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:51:05.927+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-06-06T23:51:05.928+04:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\r\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\r\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)\r\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\r\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)\r\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)\r\n\tat com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n"}
{"@timestamp":"2021-06-06T23:51:06.144+04:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:06.145+04:00","@version":"1","message":"Updating port to 8080","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:06.148+04:00","@version":"1","message":"Started ApiGatewayApplication in 34.36 seconds (JVM running for 35.037)","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:51:09.019+04:00","@version":"1","message":"Running the evict task with compensationTime 0ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:52:09.033+04:00","@version":"1","message":"Running the evict task with compensationTime 13ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:09.047+04:00","@version":"1","message":"Running the evict task with compensationTime 14ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:17.787+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b8589ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:23.845+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:25.879+04:00","@version":"1","message":"Located environment: name=sample-api-gateway, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:25.880+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:30.710+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:31.701+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:53:31.762+04:00","@version":"1","message":"Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:53:32.209+04:00","@version":"1","message":"BeanFactory id=aacc3ccd-8219-3181-9f6c-6242f4fe7dc0","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:32.547+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$6b8589ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:33.298+04:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:33.335+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:33.336+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:33.525+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:33.525+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 2799 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:33.761+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:53:33.761+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:33.784+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5403799b","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:35.885+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:37.472+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:38.232+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:53:38.232+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:38.617+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:39.904+04:00","@version":"1","message":"Starting filter initializer","logger_name":"org.springframework.cloud.netflix.zuul.ZuulFilterInitializer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.116+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.321+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.389+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.477+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.478+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.627+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.627+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:40.889+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.081+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.081+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.082+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.082+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.082+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.082+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.082+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.350+04:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8282-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.350+04:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8282-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.374+04:00","@version":"1","message":"Completed initialization in 23 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8282-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.487+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.490+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.494+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.500+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009221498 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.515+04:00","@version":"1","message":"Registering application SAMPLE-API-GATEWAY with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.517+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623009221517, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.520+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.616+04:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.618+04:00","@version":"1","message":"Updating port to 8080","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.621+04:00","@version":"1","message":"Started ApiGatewayApplication in 31.426 seconds (JVM running for 32.013)","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:41.674+04:00","@version":"1","message":"Registered instance SAMPLE-API-GATEWAY/localhost:sample-api-gateway with status UP (replication=false)","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"http-nio-8282-exec-2","level":"INFO","level_value":20000,"traceId":"a0a4db37686ecdcb","spanId":"a0a4db37686ecdcb","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"a0a4db37686ecdcb","X-B3-TraceId":"a0a4db37686ecdcb"}
{"@timestamp":"2021-06-06T23:53:41.682+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:53:44.553+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-12","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:53:56.932+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-18","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:54:09.053+04:00","@version":"1","message":"Running the evict task with compensationTime 5ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:09.317+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-7","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:54:11.492+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:11.493+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:11.563+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:11.563+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:11.564+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:11.564+04:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:11.564+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:11.600+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:21.641+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-1","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:54:34.022+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-17","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:54:38.014+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$76af16b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:44.216+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:46.153+04:00","@version":"1","message":"Located environment: name=workspaces-api, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:46.153+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:46.385+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-11","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:54:50.834+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.WorkplacesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:51.921+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:54:52.001+04:00","@version":"1","message":"Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:54:52.387+04:00","@version":"1","message":"BeanFactory id=4f7e2fc0-4972-3a96-b2c1-965cb3d1faac","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:52.928+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$76af16b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:53.804+04:00","@version":"1","message":"Tomcat initialized with port(s): 9090 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:53.847+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:53.848+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:54.067+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:54.068+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3220 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:54.308+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:54:54.308+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:54.333+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3635099","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:56.468+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:57.221+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-06T23:54:57.221+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:57.760+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:54:58.736+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-9","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:54:59.912+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:00.294+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:00.479+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:00.562+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:00.875+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:00.875+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.084+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.085+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.446+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.676+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.676+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.677+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.677+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.677+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.677+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.677+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.905+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.910+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.913+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.918+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009301916 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.929+04:00","@version":"1","message":"Registering application WORKSPACES-API with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.930+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623009301930, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:01.933+04:00","@version":"1","message":"DiscoveryClient_WORKSPACES-API/localhost:workspaces-api:9090: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:02.170+04:00","@version":"1","message":"Registered instance WORKSPACES-API/localhost:workspaces-api:9090 with status UP (replication=false)","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"http-nio-8282-exec-5","level":"INFO","level_value":20000,"traceId":"b09e8ec46774ff92","spanId":"b09e8ec46774ff92","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"b09e8ec46774ff92","X-B3-TraceId":"b09e8ec46774ff92"}
{"@timestamp":"2021-06-06T23:55:02.173+04:00","@version":"1","message":"DiscoveryClient_WORKSPACES-API/localhost:workspaces-api:9090 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:02.181+04:00","@version":"1","message":"Tomcat started on port(s): 9090 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:02.182+04:00","@version":"1","message":"Updating port to 9090","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:02.184+04:00","@version":"1","message":"Started WorkplacesApplication in 31.531 seconds (JVM running for 32.226)","logger_name":"com.epam.hw.netflix.WorkplacesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:09.065+04:00","@version":"1","message":"Running the evict task with compensationTime 12ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:55:11.051+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-17","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:55:23.470+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-6","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:55:35.914+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-13","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:55:48.281+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-8","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:56:00.616+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-5","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:56:09.073+04:00","@version":"1","message":"Running the evict task with compensationTime 7ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:56:12.941+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:56:25.376+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-3","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:56:35.289+04:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:56:35.290+04:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:56:35.316+04:00","@version":"1","message":"Completed initialization in 26 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:56:35.402+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"21a3f1aaa2530c9f","spanId":"21a3f1aaa2530c9f","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"21a3f1aaa2530c9f","X-B3-TraceId":"21a3f1aaa2530c9f"}
{"@timestamp":"2021-06-06T23:56:37.715+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-5","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:56:50.059+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:57:02.387+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-6","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:57:09.086+04:00","@version":"1","message":"Running the evict task with compensationTime 12ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:57:14.740+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-6","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:57:27.053+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-13","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:57:32.284+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"650a9a7d973d0232","spanId":"650a9a7d973d0232","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"650a9a7d973d0232","X-B3-TraceId":"650a9a7d973d0232"}
{"@timestamp":"2021-06-06T23:57:39.457+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-8","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:57:45.366+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-9","level":"INFO","level_value":20000,"traceId":"4d86f296820ed977","spanId":"4d86f296820ed977","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"4d86f296820ed977","X-B3-TraceId":"4d86f296820ed977"}
{"@timestamp":"2021-06-06T23:57:45.942+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"c020ae4ef5526c52","spanId":"c020ae4ef5526c52","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"c020ae4ef5526c52","X-B3-TraceId":"c020ae4ef5526c52"}
{"@timestamp":"2021-06-06T23:57:51.732+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-8","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:58:04.034+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-17","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:58:09.088+04:00","@version":"1","message":"Running the evict task with compensationTime 2ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:58:16.362+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-14","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:58:28.657+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-15","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:58:28.728+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"1724108779e7ae2e","spanId":"1724108779e7ae2e","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"1724108779e7ae2e","X-B3-TraceId":"1724108779e7ae2e"}
{"@timestamp":"2021-06-06T23:58:29.280+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-8","level":"INFO","level_value":20000,"traceId":"bb9f7e39a939a83a","spanId":"bb9f7e39a939a83a","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"bb9f7e39a939a83a","X-B3-TraceId":"bb9f7e39a939a83a"}
{"@timestamp":"2021-06-06T23:58:29.643+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-9","level":"INFO","level_value":20000,"traceId":"8ef0541e6a85d19b","spanId":"8ef0541e6a85d19b","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"8ef0541e6a85d19b","X-B3-TraceId":"8ef0541e6a85d19b"}
{"@timestamp":"2021-06-06T23:58:29.802+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"9b24bf92142e8a21","spanId":"9b24bf92142e8a21","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"9b24bf92142e8a21","X-B3-TraceId":"9b24bf92142e8a21"}
{"@timestamp":"2021-06-06T23:58:29.952+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-3","level":"INFO","level_value":20000,"traceId":"ac53a086c7b06b39","spanId":"ac53a086c7b06b39","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ac53a086c7b06b39","X-B3-TraceId":"ac53a086c7b06b39"}
{"@timestamp":"2021-06-06T23:58:30.108+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"16db1a176faf771e","spanId":"16db1a176faf771e","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"16db1a176faf771e","X-B3-TraceId":"16db1a176faf771e"}
{"@timestamp":"2021-06-06T23:58:30.270+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-8","level":"INFO","level_value":20000,"traceId":"78dd39cecb3ac180","spanId":"78dd39cecb3ac180","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"78dd39cecb3ac180","X-B3-TraceId":"78dd39cecb3ac180"}
{"@timestamp":"2021-06-06T23:58:30.434+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-9","level":"INFO","level_value":20000,"traceId":"f14ff2c8cbb8b4a7","spanId":"f14ff2c8cbb8b4a7","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"f14ff2c8cbb8b4a7","X-B3-TraceId":"f14ff2c8cbb8b4a7"}
{"@timestamp":"2021-06-06T23:58:30.594+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"72e1af5c9b24b47c","spanId":"72e1af5c9b24b47c","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"72e1af5c9b24b47c","X-B3-TraceId":"72e1af5c9b24b47c"}
{"@timestamp":"2021-06-06T23:58:30.751+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-3","level":"INFO","level_value":20000,"traceId":"627acdfe4aeb474f","spanId":"627acdfe4aeb474f","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"627acdfe4aeb474f","X-B3-TraceId":"627acdfe4aeb474f"}
{"@timestamp":"2021-06-06T23:58:30.918+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"ee1b140d9144627e","spanId":"ee1b140d9144627e","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ee1b140d9144627e","X-B3-TraceId":"ee1b140d9144627e"}
{"@timestamp":"2021-06-06T23:58:41.023+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-8","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:58:41.115+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:58:53.361+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-1","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:59:05.685+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-5","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:59:09.092+04:00","@version":"1","message":"Running the evict task with compensationTime 3ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-06T23:59:18.052+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-10","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:59:30.408+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-3","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:59:42.746+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-16","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-06T23:59:55.068+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-16","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:00:01.695+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:00:07.456+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-14","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:00:09.100+04:00","@version":"1","message":"Running the evict task with compensationTime 8ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:00:19.760+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:00:32.128+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-8","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:00:44.462+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-15","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:00:45.910+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cbaf8c89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:00:53.217+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:00:55.239+04:00","@version":"1","message":"Located environment: name=employees-api, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:00:55.239+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:00:56.766+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-11","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:01:00.040+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.EmployeesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:01.196+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:01:01.648+04:00","@version":"1","message":"BeanFactory id=c0a31b78-ec09-33a4-8fe2-f5a7420356a4","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:01.679+04:00","@version":"1","message":"Bean 'com.epam.hw.netflix.api.WorkspaceAPI' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:02.011+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cbaf8c89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:02.858+04:00","@version":"1","message":"Tomcat initialized with port(s): 9092 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:02.894+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:02.894+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:03.149+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:03.150+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3082 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:03.432+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:01:03.433+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:03.453+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6a3fbcb1","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:05.757+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:06.884+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:01:06.884+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:07.463+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:09.076+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-11","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:01:09.107+04:00","@version":"1","message":"Running the evict task with compensationTime 6ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:10.007+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:10.447+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:11.166+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:11.363+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:12.330+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:12.330+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:12.532+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:12.533+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:12.832+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.039+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.040+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.040+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.040+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.041+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.041+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.041+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.365+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.400+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.404+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.482+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009673410 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.492+04:00","@version":"1","message":"Registering application EMPLOYEES-API with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.493+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623009673493, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.496+04:00","@version":"1","message":"DiscoveryClient_EMPLOYEES-API/localhost:employees-api:9092: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.590+04:00","@version":"1","message":"Registered instance EMPLOYEES-API/localhost:employees-api:9092 with status UP (replication=false)","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"http-nio-8282-exec-1","level":"INFO","level_value":20000,"traceId":"acf1bbb9621e1e66","spanId":"acf1bbb9621e1e66","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"acf1bbb9621e1e66","X-B3-TraceId":"acf1bbb9621e1e66"}
{"@timestamp":"2021-06-07T00:01:13.679+04:00","@version":"1","message":"DiscoveryClient_EMPLOYEES-API/localhost:employees-api:9092 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.799+04:00","@version":"1","message":"Tomcat started on port(s): 9092 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.803+04:00","@version":"1","message":"Updating port to 9092","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:13.808+04:00","@version":"1","message":"Started EmployeesApplication in 36.958 seconds (JVM running for 38.446)","logger_name":"com.epam.hw.netflix.EmployeesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:01:19.925+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"159b34ef1f7f6e51","spanId":"159b34ef1f7f6e51","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"159b34ef1f7f6e51","X-B3-TraceId":"159b34ef1f7f6e51"}
{"@timestamp":"2021-06-07T00:01:21.398+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-1","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:01:30.263+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-9","level":"INFO","level_value":20000,"traceId":"b55d806f110e3d5d","spanId":"b55d806f110e3d5d","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"b55d806f110e3d5d","X-B3-TraceId":"b55d806f110e3d5d"}
{"@timestamp":"2021-06-07T00:01:30.811+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"26cd6cfb9613698a","spanId":"26cd6cfb9613698a","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"26cd6cfb9613698a","X-B3-TraceId":"26cd6cfb9613698a"}
{"@timestamp":"2021-06-07T00:01:31.048+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-3","level":"INFO","level_value":20000,"traceId":"959c3c6486b272b4","spanId":"959c3c6486b272b4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"959c3c6486b272b4","X-B3-TraceId":"959c3c6486b272b4"}
{"@timestamp":"2021-06-07T00:01:31.338+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"5bb731c53f3fc8b3","spanId":"5bb731c53f3fc8b3","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"5bb731c53f3fc8b3","X-B3-TraceId":"5bb731c53f3fc8b3"}
{"@timestamp":"2021-06-07T00:01:31.519+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-7","level":"INFO","level_value":20000,"traceId":"8370df7cf8b1a3ff","spanId":"8370df7cf8b1a3ff","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"8370df7cf8b1a3ff","X-B3-TraceId":"8370df7cf8b1a3ff"}
{"@timestamp":"2021-06-07T00:01:31.718+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-9","level":"INFO","level_value":20000,"traceId":"78da228e66ec2c41","spanId":"78da228e66ec2c41","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"78da228e66ec2c41","X-B3-TraceId":"78da228e66ec2c41"}
{"@timestamp":"2021-06-07T00:01:31.935+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"ab117e015f1a8259","spanId":"ab117e015f1a8259","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ab117e015f1a8259","X-B3-TraceId":"ab117e015f1a8259"}
{"@timestamp":"2021-06-07T00:01:32.136+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-3","level":"INFO","level_value":20000,"traceId":"f4a28e0d97d0b0b8","spanId":"f4a28e0d97d0b0b8","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"f4a28e0d97d0b0b8","X-B3-TraceId":"f4a28e0d97d0b0b8"}
{"@timestamp":"2021-06-07T00:01:32.324+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"bdd3deeb2fb3a172","spanId":"bdd3deeb2fb3a172","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"bdd3deeb2fb3a172","X-B3-TraceId":"bdd3deeb2fb3a172"}
{"@timestamp":"2021-06-07T00:01:32.499+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-7","level":"INFO","level_value":20000,"traceId":"b0dd9b38afe1a544","spanId":"b0dd9b38afe1a544","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"b0dd9b38afe1a544","X-B3-TraceId":"b0dd9b38afe1a544"}
{"@timestamp":"2021-06-07T00:01:32.682+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-9","level":"INFO","level_value":20000,"traceId":"65012c6b152e003a","spanId":"65012c6b152e003a","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"65012c6b152e003a","X-B3-TraceId":"65012c6b152e003a"}
{"@timestamp":"2021-06-07T00:01:32.871+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"a84b6c361f81ad0f","spanId":"a84b6c361f81ad0f","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"a84b6c361f81ad0f","X-B3-TraceId":"a84b6c361f81ad0f"}
{"@timestamp":"2021-06-07T00:01:33.698+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:01:46.038+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:01:58.322+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-3","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:02:09.116+04:00","@version":"1","message":"Running the evict task with compensationTime 9ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:10.641+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-1","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:02:22.940+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-12","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:02:35.565+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-10","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:02:43.737+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f127be66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:47.859+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-2","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:02:50.312+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:52.311+04:00","@version":"1","message":"Located environment: name=sample-api-gateway, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:52.312+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:57.026+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:58.075+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:02:58.156+04:00","@version":"1","message":"Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:02:58.663+04:00","@version":"1","message":"BeanFactory id=aacc3ccd-8219-3181-9f6c-6242f4fe7dc0","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:59.043+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f127be66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:59.905+04:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:59.947+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:02:59.948+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:00.156+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-2","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:03:00.165+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:00.166+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3123 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:00.431+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:03:00.431+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:00.455+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@59838256","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:02.672+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:04.207+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:04.892+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:03:04.892+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:05.330+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:06.681+04:00","@version":"1","message":"Starting filter initializer","logger_name":"org.springframework.cloud.netflix.zuul.ZuulFilterInitializer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:06.892+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:07.232+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:07.693+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:07.832+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:07.834+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.102+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.103+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.493+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.683+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.684+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.684+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.684+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.684+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.685+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:08.685+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.048+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.052+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.054+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.059+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009789057 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.069+04:00","@version":"1","message":"Registering application SAMPLE-API-GATEWAY with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.069+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623009789069, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.072+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.137+04:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.139+04:00","@version":"1","message":"Updating port to 8080","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.141+04:00","@version":"1","message":"Started ApiGatewayApplication in 34.748 seconds (JVM running for 35.475)","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.121+04:00","@version":"1","message":"Running the evict task with compensationTime 4ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:09.194+04:00","@version":"1","message":"Registered instance SAMPLE-API-GATEWAY/localhost:sample-api-gateway with status UP (replication=false)","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"http-nio-8282-exec-3","level":"INFO","level_value":20000,"traceId":"3656b71d5dc2f29a","spanId":"3656b71d5dc2f29a","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"3656b71d5dc2f29a","X-B3-TraceId":"3656b71d5dc2f29a"}
{"@timestamp":"2021-06-07T00:03:09.196+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:03:12.498+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-14","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:03:18.638+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-8","level":"INFO","level_value":20000,"traceId":"0cb245c318f79153","spanId":"0cb245c318f79153","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"0cb245c318f79153","X-B3-TraceId":"0cb245c318f79153"}
{"@timestamp":"2021-06-07T00:03:24.023+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-2","level":"INFO","level_value":20000,"traceId":"713b1bdd30224708","spanId":"713b1bdd30224708","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"713b1bdd30224708","X-B3-TraceId":"713b1bdd30224708"}
{"@timestamp":"2021-06-07T00:03:24.673+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-3","level":"INFO","level_value":20000,"traceId":"648783712d0edfe7","spanId":"648783712d0edfe7","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"648783712d0edfe7","X-B3-TraceId":"648783712d0edfe7"}
{"@timestamp":"2021-06-07T00:03:24.861+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-6","level":"INFO","level_value":20000,"traceId":"051ac6367b8e7c54","spanId":"051ac6367b8e7c54","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"051ac6367b8e7c54","X-B3-TraceId":"051ac6367b8e7c54"}
{"@timestamp":"2021-06-07T00:03:24.864+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-9","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:03:25.038+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-8","level":"INFO","level_value":20000,"traceId":"3fa7ba7a9a018c5d","spanId":"3fa7ba7a9a018c5d","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"3fa7ba7a9a018c5d","X-B3-TraceId":"3fa7ba7a9a018c5d"}
{"@timestamp":"2021-06-07T00:03:25.226+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-10","level":"INFO","level_value":20000,"traceId":"dc7e3f3249ce6f1c","spanId":"dc7e3f3249ce6f1c","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"dc7e3f3249ce6f1c","X-B3-TraceId":"dc7e3f3249ce6f1c"}
{"@timestamp":"2021-06-07T00:03:25.399+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-2","level":"INFO","level_value":20000,"traceId":"94930ec31e0c31d4","spanId":"94930ec31e0c31d4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"94930ec31e0c31d4","X-B3-TraceId":"94930ec31e0c31d4"}
{"@timestamp":"2021-06-07T00:03:25.590+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-3","level":"INFO","level_value":20000,"traceId":"deec6104feb511a2","spanId":"deec6104feb511a2","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"deec6104feb511a2","X-B3-TraceId":"deec6104feb511a2"}
{"@timestamp":"2021-06-07T00:03:25.777+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-6","level":"INFO","level_value":20000,"traceId":"9ddde065c2c9e613","spanId":"9ddde065c2c9e613","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"9ddde065c2c9e613","X-B3-TraceId":"9ddde065c2c9e613"}
{"@timestamp":"2021-06-07T00:03:35.044+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@98ff8c received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-10","level":"INFO","level_value":20000,"traceId":"badc1e6696800bf6","spanId":"badc1e6696800bf6","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"badc1e6696800bf6","X-B3-TraceId":"badc1e6696800bf6"}
{"@timestamp":"2021-06-07T00:03:37.238+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-16","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:03:49.525+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-16","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:04:01.865+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-1","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:04:09.130+04:00","@version":"1","message":"Running the evict task with compensationTime 9ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:04:14.165+04:00","@version":"1","message":"Network level connection to peer eureka; retrying after delay","logger_name":"com.netflix.eureka.cluster.ReplicationTaskProcessor","thread_name":"TaskBatchingWorker-target_eureka-0","level":"ERROR","level_value":40000,"stack_trace":"com.sun.jersey.api.client.ClientHandlerException: java.net.UnknownHostException: eureka\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)\r\n\tat com.netflix.eureka.cluster.DynamicGZIPContentEncodingFilter.handle(DynamicGZIPContentEncodingFilter.java:48)\r\n\tat com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)\r\n\tat com.sun.jersey.api.client.Client.handle(Client.java:652)\r\n\tat com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)\r\n\tat com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)\r\n\tat com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)\r\n\tat com.netflix.eureka.transport.JerseyReplicationClient.submitBatchUpdates(JerseyReplicationClient.java:116)\r\n\tat com.netflix.eureka.cluster.ReplicationTaskProcessor.process(ReplicationTaskProcessor.java:80)\r\n\tat com.netflix.eureka.util.batcher.TaskExecutors$BatchWorkerRunnable.run(TaskExecutors.java:193)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.net.UnknownHostException: eureka\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:263)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:162)\r\n\tat org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)\r\n\tat org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)\r\n\tat com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)\r\n\t... 10 common frames omitted\r\n"}
{"@timestamp":"2021-06-07T00:05:07.609+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2609e0dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:13.859+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:15.924+04:00","@version":"1","message":"Located environment: name=eureka-service-registry, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:15.925+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/eureka-service-registry.yml'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:20.895+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.EurekaServerApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:22.224+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:05:23.033+04:00","@version":"1","message":"BeanFactory id=d0e5a5d3-67c8-3f37-a10d-c22f5e8f0ead","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:23.909+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2609e0dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:26.023+04:00","@version":"1","message":"Tomcat initialized with port(s): 8282 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:26.090+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:26.091+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:26.432+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:26.433+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 5498 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:26.811+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:05:26.814+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:26.848+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@11dcd42c","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:30.476+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d97bbe5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:32.418+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:34.188+04:00","@version":"1","message":"Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'","logger_name":"com.sun.jersey.server.impl.application.WebApplicationImpl","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:34.394+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:34.408+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:35.026+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:35.026+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:36.741+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:05:36.742+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:38.830+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:41.812+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:42.869+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:43.852+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:44.003+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:44.004+04:00","@version":"1","message":"Client configured to neither register nor query for data.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:44.027+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009944025 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:44.124+04:00","@version":"1","message":"Initializing ...","logger_name":"com.netflix.eureka.DefaultEurekaServerContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:44.128+04:00","@version":"1","message":"The replica size seems to be empty. Check the route 53 DNS Registry","logger_name":"com.netflix.eureka.cluster.PeerEurekaNodes","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:05:44.543+04:00","@version":"1","message":"Finished initializing remote region registries. All known remote regions: []","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:44.544+04:00","@version":"1","message":"Initialized","logger_name":"com.netflix.eureka.DefaultEurekaServerContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.027+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.062+04:00","@version":"1","message":"Located environment: name=sample-api-gateway, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.064+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.802+04:00","@version":"1","message":"Registering application EUREKA-SERVICE-REGISTRY with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.820+04:00","@version":"1","message":"Setting the eureka configuration..","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.824+04:00","@version":"1","message":"Eureka data center value eureka.datacenter is not set, defaulting to default","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.826+04:00","@version":"1","message":"Eureka environment value eureka.environment is not set, defaulting to test","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.871+04:00","@version":"1","message":"isAws returned false","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.873+04:00","@version":"1","message":"Initialized server context","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.874+04:00","@version":"1","message":"Got 1 instances from neighboring DS node","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.874+04:00","@version":"1","message":"Renew threshold is: 1","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.875+04:00","@version":"1","message":"Changing status to UP","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.906+04:00","@version":"1","message":"Started Eureka Server","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.974+04:00","@version":"1","message":"Tomcat started on port(s): 8282 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.976+04:00","@version":"1","message":"Updating port to 8282","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:45.980+04:00","@version":"1","message":"Started EurekaServerApplication in 48.097 seconds (JVM running for 48.653)","logger_name":"com.epam.hw.netflix.EurekaServerApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:52.470+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:53.579+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:05:53.646+04:00","@version":"1","message":"Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:05:54.228+04:00","@version":"1","message":"BeanFactory id=aacc3ccd-8219-3181-9f6c-6242f4fe7dc0","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:54.672+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d97bbe5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:55.555+04:00","@version":"1","message":"Tomcat initialized with port(s): 8080 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:55.590+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:55.591+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:55.796+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:55.796+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3307 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:56.227+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:05:56.228+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:56.277+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@122635ef","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:58.239+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8ade896e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:05:58.331+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:00.070+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:00.884+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$21811eee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:01.500+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:01.501+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:01.944+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:03.523+04:00","@version":"1","message":"Starting filter initializer","logger_name":"org.springframework.cloud.netflix.zuul.ZuulFilterInitializer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:03.786+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:03.985+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:04.117+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:04.233+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:04.234+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:04.462+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:04.463+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:04.801+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.010+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.011+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.011+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.011+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.011+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.012+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.012+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.408+04:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8282-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.409+04:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8282-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.455+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.516+04:00","@version":"1","message":"Completed initialization in 107 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8282-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.685+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.687+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.689+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.694+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623009965692 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.704+04:00","@version":"1","message":"Registering application SAMPLE-API-GATEWAY with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.705+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623009965705, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.709+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.775+04:00","@version":"1","message":"Tomcat started on port(s): 8080 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.776+04:00","@version":"1","message":"Updating port to 8080","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.779+04:00","@version":"1","message":"Started ApiGatewayApplication in 45.847 seconds (JVM running for 46.556)","logger_name":"com.epam.hw.netflix.ApiGatewayApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:05.867+04:00","@version":"1","message":"Registered instance SAMPLE-API-GATEWAY/localhost:sample-api-gateway with status UP (replication=false)","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"http-nio-8282-exec-2","level":"INFO","level_value":20000,"traceId":"3458be7a1b7e4237","spanId":"3458be7a1b7e4237","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"3458be7a1b7e4237","X-B3-TraceId":"3458be7a1b7e4237"}
{"@timestamp":"2021-06-07T00:06:05.872+04:00","@version":"1","message":"DiscoveryClient_SAMPLE-API-GATEWAY/localhost:sample-api-gateway - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:07.739+04:00","@version":"1","message":"Located environment: name=workspaces-api, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:07.739+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:14.191+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:16.490+04:00","@version":"1","message":"Located environment: name=employees-api, profiles=[default], label=null, version=706f75121f7daa30bbb83c621dbc55e9dd37f2b0, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:16.491+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:18.293+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.WorkplacesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:19.577+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:19.675+04:00","@version":"1","message":"Endpoint ID 'hystrix.stream' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:20.127+04:00","@version":"1","message":"BeanFactory id=4f7e2fc0-4972-3a96-b2c1-965cb3d1faac","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:20.539+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8ade896e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:21.516+04:00","@version":"1","message":"Tomcat initialized with port(s): 9090 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:21.547+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:21.555+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:21.767+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:21.768+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3459 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:22.048+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:22.049+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:22.072+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7412a438","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:23.478+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.EmployeesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:26.290+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:26.865+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:27.908+04:00","@version":"1","message":"BeanFactory id=c0a31b78-ec09-33a4-8fe2-f5a7420356a4","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:27.946+04:00","@version":"1","message":"Bean 'com.epam.hw.netflix.api.WorkspaceAPI' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:28.657+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$21811eee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:29.870+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:29.872+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:30.583+04:00","@version":"1","message":"Tomcat initialized with port(s): 9092 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:30.676+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:30.679+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:31.125+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:31.125+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 6160 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:32.225+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:32.386+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:32.387+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:32.424+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@34d480b9","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.708+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.708+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.709+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.709+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.709+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.710+04:00","@version":"1","message":"Application version is -1: false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.710+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:35.784+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-CacheRefreshExecutor-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:36.452+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:37.014+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:39.470+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T00:06:39.471+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:39.616+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:40.160+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:40.229+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:40.678+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:42.663+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:42.664+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:43.280+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:43.281+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:43.619+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:43.804+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.135+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.309+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.387+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.597+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.598+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.598+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.598+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.598+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.599+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.599+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.851+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:44.884+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.011+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.011+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.210+04:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.403+04:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.403+04:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.404+04:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.404+04:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.404+04:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.404+04:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.405+04:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.701+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.705+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.708+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.717+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623010005714 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.727+04:00","@version":"1","message":"Registering application EMPLOYEES-API with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.728+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623010005728, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.731+04:00","@version":"1","message":"DiscoveryClient_EMPLOYEES-API/localhost:employees-api:9092: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.817+04:00","@version":"1","message":"Registered instance EMPLOYEES-API/localhost:employees-api:9092 with status UP (replication=false)","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"http-nio-8282-exec-8","level":"INFO","level_value":20000,"traceId":"b14c0640598d4720","spanId":"b14c0640598d4720","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"b14c0640598d4720","X-B3-TraceId":"b14c0640598d4720"}
{"@timestamp":"2021-06-07T00:06:45.823+04:00","@version":"1","message":"DiscoveryClient_EMPLOYEES-API/localhost:employees-api:9092 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.877+04:00","@version":"1","message":"Tomcat started on port(s): 9092 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.879+04:00","@version":"1","message":"Updating port to 9092","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.883+04:00","@version":"1","message":"Started EmployeesApplication in 56.686 seconds (JVM running for 57.768)","logger_name":"com.epam.hw.netflix.EmployeesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.928+04:00","@version":"1","message":"Running the evict task with compensationTime 0ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.945+04:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.951+04:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.955+04:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.963+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623010005960 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.993+04:00","@version":"1","message":"Registering application WORKSPACES-API with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:45.995+04:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1623010005995, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:46.046+04:00","@version":"1","message":"DiscoveryClient_WORKSPACES-API/localhost:workspaces-api:9090: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:46.915+04:00","@version":"1","message":"Registered instance WORKSPACES-API/localhost:workspaces-api:9090 with status UP (replication=false)","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"http-nio-8282-exec-9","level":"INFO","level_value":20000,"traceId":"6edae5e77de5d667","spanId":"6edae5e77de5d667","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"6edae5e77de5d667","X-B3-TraceId":"6edae5e77de5d667"}
{"@timestamp":"2021-06-07T00:06:46.935+04:00","@version":"1","message":"DiscoveryClient_WORKSPACES-API/localhost:workspaces-api:9090 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:47.036+04:00","@version":"1","message":"Tomcat started on port(s): 9090 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:47.037+04:00","@version":"1","message":"Updating port to 9090","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:47.060+04:00","@version":"1","message":"Started WorkplacesApplication in 64.062 seconds (JVM running for 65.103)","logger_name":"com.epam.hw.netflix.WorkplacesApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:47.126+04:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:47.126+04:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:47.144+04:00","@version":"1","message":"Completed initialization in 17 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:47.202+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"27d7a4c41c6d8bac","spanId":"27d7a4c41c6d8bac","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"27d7a4c41c6d8bac","X-B3-TraceId":"27d7a4c41c6d8bac"}
{"@timestamp":"2021-06-07T00:06:54.541+04:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:54.541+04:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:54.859+04:00","@version":"1","message":"Completed initialization in 317 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:06:55.249+04:00","@version":"1","message":"Flipping property: workspaces-api.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647","logger_name":"com.netflix.config.ChainedDynamicProperty","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000,"traceId":"ea792385f642f6b4","spanId":"ea792385f642f6b4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ea792385f642f6b4","X-B3-TraceId":"ea792385f642f6b4"}
{"@timestamp":"2021-06-07T00:06:55.316+04:00","@version":"1","message":"Shutdown hook installed for: NFLoadBalancer-PingTimer-workspaces-api","logger_name":"com.netflix.util.concurrent.ShutdownEnabledTimer","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000,"traceId":"ea792385f642f6b4","spanId":"ea792385f642f6b4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ea792385f642f6b4","X-B3-TraceId":"ea792385f642f6b4"}
{"@timestamp":"2021-06-07T00:06:55.317+04:00","@version":"1","message":"Client: workspaces-api instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=workspaces-api,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null","logger_name":"com.netflix.loadbalancer.BaseLoadBalancer","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000,"traceId":"ea792385f642f6b4","spanId":"ea792385f642f6b4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ea792385f642f6b4","X-B3-TraceId":"ea792385f642f6b4"}
{"@timestamp":"2021-06-07T00:06:55.330+04:00","@version":"1","message":"Using serverListUpdater PollingServerListUpdater","logger_name":"com.netflix.loadbalancer.DynamicServerListLoadBalancer","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000,"traceId":"ea792385f642f6b4","spanId":"ea792385f642f6b4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ea792385f642f6b4","X-B3-TraceId":"ea792385f642f6b4"}
{"@timestamp":"2021-06-07T00:06:55.338+04:00","@version":"1","message":"DynamicServerListLoadBalancer for client workspaces-api initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=workspaces-api,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@72c060b","logger_name":"com.netflix.loadbalancer.DynamicServerListLoadBalancer","thread_name":"http-nio-8080-exec-1","level":"INFO","level_value":20000,"traceId":"ea792385f642f6b4","spanId":"ea792385f642f6b4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ea792385f642f6b4","X-B3-TraceId":"ea792385f642f6b4"}
{"@timestamp":"2021-06-07T00:06:55.790+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-1","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"ea792385f642f6b4","spanId":"ea792385f642f6b4","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ea792385f642f6b4","X-B3-TraceId":"ea792385f642f6b4"}
{"@timestamp":"2021-06-07T00:07:00.222+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-2","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"6b863bb5fa35a93d","spanId":"6b863bb5fa35a93d","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"6b863bb5fa35a93d","X-B3-TraceId":"6b863bb5fa35a93d"}
{"@timestamp":"2021-06-07T00:07:07.833+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-6","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"2e7e9afec62c8831","spanId":"2e7e9afec62c8831","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"2e7e9afec62c8831","X-B3-TraceId":"2e7e9afec62c8831"}
{"@timestamp":"2021-06-07T00:07:09.064+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-5","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"daa6ec88c50ee1c7","spanId":"daa6ec88c50ee1c7","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"daa6ec88c50ee1c7","X-B3-TraceId":"daa6ec88c50ee1c7"}
{"@timestamp":"2021-06-07T00:07:09.386+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-9","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"6e695db1126361c1","spanId":"6e695db1126361c1","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"6e695db1126361c1","X-B3-TraceId":"6e695db1126361c1"}
{"@timestamp":"2021-06-07T00:07:09.580+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-1","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"d810b7ec3d4f3e7a","spanId":"d810b7ec3d4f3e7a","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"d810b7ec3d4f3e7a","X-B3-TraceId":"d810b7ec3d4f3e7a"}
{"@timestamp":"2021-06-07T00:07:09.742+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-2","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"68d78e151cee621a","spanId":"68d78e151cee621a","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"68d78e151cee621a","X-B3-TraceId":"68d78e151cee621a"}
{"@timestamp":"2021-06-07T00:07:09.895+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-7","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"242e1b42e4e8f7b1","spanId":"242e1b42e4e8f7b1","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"242e1b42e4e8f7b1","X-B3-TraceId":"242e1b42e4e8f7b1"}
{"@timestamp":"2021-06-07T00:07:10.058+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-5","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"a053231d898899ad","spanId":"a053231d898899ad","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"a053231d898899ad","X-B3-TraceId":"a053231d898899ad"}
{"@timestamp":"2021-06-07T00:07:12.656+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-9","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"244108f739df8f2c","spanId":"244108f739df8f2c","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"244108f739df8f2c","X-B3-TraceId":"244108f739df8f2c"}
{"@timestamp":"2021-06-07T00:07:12.993+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-1","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"8c5f18094090623b","spanId":"8c5f18094090623b","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"8c5f18094090623b","X-B3-TraceId":"8c5f18094090623b"}
{"@timestamp":"2021-06-07T00:07:13.219+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-2","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"f2a92114894bc819","spanId":"f2a92114894bc819","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"f2a92114894bc819","X-B3-TraceId":"f2a92114894bc819"}
{"@timestamp":"2021-06-07T00:07:13.476+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-7","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"6ca2ae80084bac9e","spanId":"6ca2ae80084bac9e","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"6ca2ae80084bac9e","X-B3-TraceId":"6ca2ae80084bac9e"}
{"@timestamp":"2021-06-07T00:07:13.646+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-5","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"f6b23f7ce1f0be79","spanId":"f6b23f7ce1f0be79","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"f6b23f7ce1f0be79","X-B3-TraceId":"f6b23f7ce1f0be79"}
{"@timestamp":"2021-06-07T00:07:13.862+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-8","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"c05c70f5ab0573ef","spanId":"c05c70f5ab0573ef","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"c05c70f5ab0573ef","X-B3-TraceId":"c05c70f5ab0573ef"}
{"@timestamp":"2021-06-07T00:07:14.144+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-10","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"6ad6a2bc37c871ac","spanId":"6ad6a2bc37c871ac","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"6ad6a2bc37c871ac","X-B3-TraceId":"6ad6a2bc37c871ac"}
{"@timestamp":"2021-06-07T00:07:14.285+04:00","@version":"1","message":"Error during filtering","logger_name":"org.springframework.cloud.netflix.zuul.filters.post.SendErrorFilter","thread_name":"http-nio-8080-exec-1","level":"WARN","level_value":30000,"stack_trace":"com.netflix.zuul.exception.ZuulException: Forwarding error\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:191)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:166)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:114)\r\n\tat com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)\r\n\tat com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)\r\n\tat com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)\r\n\tat com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)\r\n\tat com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)\r\n\tat com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)\r\n\tat com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)\r\n\tat org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)\r\n\tat org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)\r\n\tat org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:50)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.netflix.client.ClientException: Load balancer does not have available server for client: workspaces-api\r\n\tat com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)\r\n\tat com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)\r\n\tat rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)\r\n\tat rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)\r\n\tat rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)\r\n\tat rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)\r\n\tat rx.Subscriber.setProducer(Subscriber.java:209)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)\r\n\tat rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:444)\r\n\tat rx.observables.BlockingObservable.single(BlockingObservable.java:341)\r\n\tat com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)\r\n\tat com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)\r\n\tat rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)\r\n\tat rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)\r\n\tat rx.Observable.unsafeSubscribe(Observable.java:10151)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)\r\n\tat rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)\r\n\tat rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)\r\n\tat rx.Observable.subscribe(Observable.java:10247)\r\n\tat rx.Observable.subscribe(Observable.java:10214)\r\n\tat rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)\r\n\tat rx.observables.BlockingObservable.toFuture(BlockingObservable.java:411)\r\n\tat com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)\r\n\tat com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)\r\n\tat org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:161)\r\n\t... 70 common frames omitted\r\n","traceId":"675a8570fb0105db","spanId":"675a8570fb0105db","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"675a8570fb0105db","X-B3-TraceId":"675a8570fb0105db"}
{"@timestamp":"2021-06-07T00:07:14.997+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-6","level":"INFO","level_value":20000,"traceId":"e03866ea534fa59a","spanId":"e03866ea534fa59a","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"e03866ea534fa59a","X-B3-TraceId":"e03866ea534fa59a"}
{"@timestamp":"2021-06-07T00:07:15.454+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-8","level":"INFO","level_value":20000,"traceId":"045279edb59497a8","spanId":"045279edb59497a8","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"045279edb59497a8","X-B3-TraceId":"045279edb59497a8"}
{"@timestamp":"2021-06-07T00:07:15.714+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-10","level":"INFO","level_value":20000,"traceId":"a5ea9288a71d8b75","spanId":"a5ea9288a71d8b75","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"a5ea9288a71d8b75","X-B3-TraceId":"a5ea9288a71d8b75"}
{"@timestamp":"2021-06-07T00:07:26.381+04:00","@version":"1","message":"Flipping property: workspaces-api.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647","logger_name":"com.netflix.config.ChainedDynamicProperty","thread_name":"PollingServerListUpdater-0","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:07:45.884+04:00","@version":"1","message":"Running the evict task with compensationTime 1ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:08:14.538+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-5","level":"INFO","level_value":20000,"traceId":"cb76a9d69b227784","spanId":"ce6889b16f47423c","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"ce6889b16f47423c","X-B3-ParentSpanId":"cb76a9d69b227784","X-B3-TraceId":"cb76a9d69b227784","parentId":"cb76a9d69b227784"}
{"@timestamp":"2021-06-07T00:08:45.898+04:00","@version":"1","message":"Running the evict task with compensationTime 14ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:09:45.908+04:00","@version":"1","message":"Running the evict task with compensationTime 9ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T00:09:54.335+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-6","level":"INFO","level_value":20000,"traceId":"fd3194edc9ecb167","spanId":"3e1e4b87c89a5eed","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"3e1e4b87c89a5eed","X-B3-ParentSpanId":"fd3194edc9ecb167","X-B3-TraceId":"fd3194edc9ecb167","parentId":"fd3194edc9ecb167"}
{"@timestamp":"2021-06-07T00:10:16.936+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-7","level":"INFO","level_value":20000,"traceId":"56866d500761a26a","spanId":"686a551e206a6a53","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"686a551e206a6a53","X-B3-ParentSpanId":"56866d500761a26a","X-B3-TraceId":"56866d500761a26a","parentId":"56866d500761a26a"}
{"@timestamp":"2021-06-07T00:10:17.481+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-8","level":"INFO","level_value":20000,"traceId":"18b185b4002917e0","spanId":"15b13eb571d3d98d","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"15b13eb571d3d98d","X-B3-ParentSpanId":"18b185b4002917e0","X-B3-TraceId":"18b185b4002917e0","parentId":"18b185b4002917e0"}
{"@timestamp":"2021-06-07T00:10:17.779+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-9","level":"INFO","level_value":20000,"traceId":"79c27ed49c4eaad3","spanId":"4f215dcb22a7ee6d","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"4f215dcb22a7ee6d","X-B3-ParentSpanId":"79c27ed49c4eaad3","X-B3-TraceId":"79c27ed49c4eaad3","parentId":"79c27ed49c4eaad3"}
{"@timestamp":"2021-06-07T00:10:17.999+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-10","level":"INFO","level_value":20000,"traceId":"a8ab44635063f60a","spanId":"6b47ca0cf75beb35","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"6b47ca0cf75beb35","X-B3-ParentSpanId":"a8ab44635063f60a","X-B3-TraceId":"a8ab44635063f60a","parentId":"a8ab44635063f60a"}
{"@timestamp":"2021-06-07T00:10:18.196+04:00","@version":"1","message":"Instance com.epam.hw.netflix.controllers.WorkplaceAPIController@528765f6 received workspace request","logger_name":"com.epam.hw.netflix.controllers.WorkplaceAPIController","thread_name":"http-nio-9090-exec-1","level":"INFO","level_value":20000,"traceId":"aaf7309802c6437f","spanId":"8e8e3f2135a5280b","spanExportable":"false","X-Span-Export":"false","X-B3-SpanId":"8e8e3f2135a5280b","X-B3-ParentSpanId":"aaf7309802c6437f","X-B3-TraceId":"aaf7309802c6437f","parentId":"aaf7309802c6437f"}
{"@timestamp":"2021-06-07T00:10:45.921+04:00","@version":"1","message":"Running the evict task with compensationTime 12ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:07.321+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e01f9ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:13.648+04:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:15.657+04:00","@version":"1","message":"Located environment: name=eureka-service-registry, profiles=[default], label=null, version=98735e89a27c27b12dc789a60189d0ccfe179e65, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:15.657+04:00","@version":"1","message":"Located property source: CompositePropertySource {name='configService', propertySources=[MapPropertySource {name='configClient'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/eureka-service-registry.yml'}, MapPropertySource {name='https://github.com/ArtemBeltiukov/microservices-config.git/application.yml'}]}","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:20.437+04:00","@version":"1","message":"No active profile set, falling back to default profiles: default","logger_name":"com.epam.hw.netflix.EurekaServerApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:21.635+04:00","@version":"1","message":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.","logger_name":"org.springframework.boot.actuate.endpoint.EndpointId","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T16:29:22.250+04:00","@version":"1","message":"BeanFactory id=d0e5a5d3-67c8-3f37-a10d-c22f5e8f0ead","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:22.720+04:00","@version":"1","message":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2e01f9ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:23.547+04:00","@version":"1","message":"Tomcat initialized with port(s): 8282 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:23.598+04:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:23.598+04:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/9.0.17]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:23.820+04:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:23.820+04:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3360 ms","logger_name":"org.springframework.web.context.ContextLoader","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:24.141+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T16:29:24.142+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:24.217+04:00","@version":"1","message":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@45117dd","logger_name":"com.netflix.config.DynamicPropertyFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:28.260+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:28.873+04:00","@version":"1","message":"Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'","logger_name":"com.sun.jersey.server.impl.application.WebApplicationImpl","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:28.998+04:00","@version":"1","message":"Using JSON encoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:29.000+04:00","@version":"1","message":"Using JSON decoding codec LegacyJacksonJson","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:29.343+04:00","@version":"1","message":"Using XML encoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:29.344+04:00","@version":"1","message":"Using XML decoding codec XStreamXml","logger_name":"com.netflix.discovery.provider.DiscoveryJerseyProvider","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:30.170+04:00","@version":"1","message":"No URLs will be polled as dynamic configuration sources.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T16:29:30.171+04:00","@version":"1","message":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.","logger_name":"com.netflix.config.sources.URLConfigurationSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:31.384+04:00","@version":"1","message":"Initializing ExecutorService 'applicationTaskExecutor'","logger_name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:34.199+04:00","@version":"1","message":"Cannot determine local hostname","logger_name":"org.springframework.cloud.commons.util.InetUtils","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:34.525+04:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:34.632+04:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:34.633+04:00","@version":"1","message":"Client configured to neither register nor query for data.","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:34.660+04:00","@version":"1","message":"Discovery Client initialized at timestamp 1623068974652 with initial instances count: 0","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:34.892+04:00","@version":"1","message":"Initializing ...","logger_name":"com.netflix.eureka.DefaultEurekaServerContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:34.897+04:00","@version":"1","message":"The replica size seems to be empty. Check the route 53 DNS Registry","logger_name":"com.netflix.eureka.cluster.PeerEurekaNodes","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2021-06-07T16:29:35.656+04:00","@version":"1","message":"Finished initializing remote region registries. All known remote regions: []","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:35.660+04:00","@version":"1","message":"Initialized","logger_name":"com.netflix.eureka.DefaultEurekaServerContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.130+04:00","@version":"1","message":"Exposing 2 endpoint(s) beneath base path '/actuator'","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.414+04:00","@version":"1","message":"Registering application EUREKA-SERVICE-REGISTRY with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.434+04:00","@version":"1","message":"Setting the eureka configuration..","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.438+04:00","@version":"1","message":"Eureka data center value eureka.datacenter is not set, defaulting to default","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.441+04:00","@version":"1","message":"Eureka environment value eureka.environment is not set, defaulting to test","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.552+04:00","@version":"1","message":"isAws returned false","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.553+04:00","@version":"1","message":"Initialized server context","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.553+04:00","@version":"1","message":"Got 1 instances from neighboring DS node","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.554+04:00","@version":"1","message":"Renew threshold is: 1","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.554+04:00","@version":"1","message":"Changing status to UP","logger_name":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.586+04:00","@version":"1","message":"Started Eureka Server","logger_name":"org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration","thread_name":"Thread-11","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.648+04:00","@version":"1","message":"Tomcat started on port(s): 8282 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.650+04:00","@version":"1","message":"Updating port to 8282","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:29:36.654+04:00","@version":"1","message":"Started EurekaServerApplication in 40.684 seconds (JVM running for 41.27)","logger_name":"com.epam.hw.netflix.EurekaServerApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2021-06-07T16:30:36.568+04:00","@version":"1","message":"Running the evict task with compensationTime 0ms","logger_name":"com.netflix.eureka.registry.AbstractInstanceRegistry","thread_name":"Eureka-EvictionTimer","level":"INFO","level_value":20000}
